<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Academic | Victor Mandela</title>
    <link>https://victormandela.netlify.app/tag/academic/</link>
      <atom:link href="https://victormandela.netlify.app/tag/academic/index.xml" rel="self" type="application/rss+xml" />
    <description>Academic</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>&amp;copy2021</copyright><lastBuildDate>Tue, 16 Feb 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://victormandela.netlify.app/images/icon_hu22efcb094e0f25517d9b2ea60a3d74df_42984_512x512_fill_lanczos_center_2.png</url>
      <title>Academic</title>
      <link>https://victormandela.netlify.app/tag/academic/</link>
    </image>
    
    <item>
      <title>building shinApp4: Layouts and themes</title>
      <link>https://victormandela.netlify.app/post/building-shinapp4-layouts-and-themes/</link>
      <pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://victormandela.netlify.app/post/building-shinapp4-layouts-and-themes/</guid>
      <description></description>
    </item>
    
    <item>
      <title>How to Scale Shiny Dashboards</title>
      <link>https://victormandela.netlify.app/post/how-to-scale-shiny-dashboards/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://victormandela.netlify.app/post/how-to-scale-shiny-dashboards/</guid>
      <description>&lt;p&gt;Most of the comments I get after sharing mock up and prototype shiny applications are:-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I love this app&lt;/li&gt;
&lt;li&gt;How fast did you add this features!!&lt;/li&gt;
&lt;li&gt;This is exactly what I need in my daily job at the company.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of the people commenting, have never seen shiny applications before, know nothing about &lt;code&gt;R&lt;/code&gt; and they don&amp;rsquo;t really care that its running at the back of the application.&lt;/p&gt;
&lt;h2 id=&#34;challenges-faced-by-the-developer&#34;&gt;Challenges Faced by the developer.&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;The common problems I have faced are:-&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Customizing user interface&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Increasing the user experience part&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scaling&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;scalable-applications&#34;&gt;Scalable Applications&lt;/h2&gt;
&lt;p&gt;Before we go into the remedies for this problems, I would first want us to understand the kinds of scaling there is:-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vertical Scaling&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;this is where we aim at ** increasing the amount of users for one machine**.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Horizontal scaling&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scaling the application across multiple machines&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;Scaling.jpg&#34; alt=&#34;Scaling&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;solutions-to-your-scaling-shiny-dashboards&#34;&gt;Solutions to your Scaling Shiny dashboards&lt;/h2&gt;
&lt;p&gt;Before we explain this are the main power points in brief:-&lt;/p&gt;
&lt;p&gt;a) Leveraging front end&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use Javascript to handle fast user interactions that do not change data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;b) Extract Computation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Handle resource intensive operations away from the application.&lt;/li&gt;
&lt;li&gt;Using external source to do the computation will assist.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;c) Set Architecture&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prepare applications to be used by many users.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;The Main aim&lt;/strong&gt; is to make shiny layer thin. Shiny should be a thin layer between the data and the interface.&lt;/p&gt;
&lt;h2 id=&#34;using-the-power-of-the-browser&#34;&gt;Using the power of the browser&lt;/h2&gt;
&lt;p&gt;This is what you should do:-&lt;/p&gt;
&lt;p&gt;1). Render the input in &lt;code&gt;ui.R&lt;/code&gt; and only update them in &lt;code&gt;server.R&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;2). Run inline Javascript code with &lt;code&gt;{Shinyjs}&lt;/code&gt; package.&lt;/p&gt;
&lt;p&gt;3). Set all actions in Javascript without &lt;code&gt;server.R&lt;/code&gt; part.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ui &amp;lt;- fluidPage(
  actionButton(
    &amp;quot;Click_Button&amp;quot;,
    label = &amp;quot;I will update icon!&amp;quot;,
    onclick = &amp;quot;$(&#39;mjs_update &amp;gt; i&#39;).toggle class(&#39;fa-arrow-up&#39;);&amp;quot;
    )
  )
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;extract-computation-remote-api&#34;&gt;Extract Computation: Remote API&lt;/h2&gt;
&lt;p&gt;Creating a API has been made achievable by use of the &lt;code&gt;plumber&lt;/code&gt; package.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Load only what is needed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The entire dataset is rarely needed in the application. Usually the first user action within the app is to filter/select a subset of data. First select them load.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build Rest API&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wrap data extraction login into a simple API with &lt;code&gt;{Plumber}&lt;/code&gt; by adding special comments.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deploy Easily&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use Rstudio connect or Docker to host your API.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;extract-computation-using-database&#34;&gt;Extract computation: Using Database&lt;/h2&gt;
&lt;p&gt;Many may ask, **Why use Data base?&amp;quot;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ui &amp;lt;- fluidPage(....)

data &amp;lt;- readRDS(&amp;quot;./1gb-file.rds&amp;quot;)

Server &amp;lt;- function(input, output, session){
  
  output$search_result &amp;lt;- ... data %&amp;gt;% filter(value &amp;gt; input$query_value)
}

shinyApp(ui = ui, server = server)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Because It reduces the amount of RAM used when you have many users. Its easy sinec you use the &lt;code&gt;dplyr&lt;/code&gt; package to manipulate the database.&lt;/p&gt;
&lt;h2 id=&#34;set-architecture&#34;&gt;Set Architecture&lt;/h2&gt;
&lt;p&gt;When deploying in the shiny server open source, you can use &lt;strong&gt;Ansible&lt;/strong&gt; to provision the infrastructure.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
