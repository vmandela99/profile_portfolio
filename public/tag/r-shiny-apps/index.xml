<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R Shiny Apps | Victor Mandela</title>
    <link>https://victormandela.netlify.app/tag/r-shiny-apps/</link>
      <atom:link href="https://victormandela.netlify.app/tag/r-shiny-apps/index.xml" rel="self" type="application/rss+xml" />
    <description>R Shiny Apps</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>&amp;copy2021</copyright><lastBuildDate>Mon, 29 Mar 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://victormandela.netlify.app/images/icon_hu22efcb094e0f25517d9b2ea60a3d74df_42984_512x512_fill_lanczos_center_2.png</url>
      <title>R Shiny Apps</title>
      <link>https://victormandela.netlify.app/tag/r-shiny-apps/</link>
    </image>
    
    <item>
      <title>Crop yield interactive dashboard-app</title>
      <link>https://victormandela.netlify.app/project/crop-yield-interactive-dashboard-app/</link>
      <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://victormandela.netlify.app/project/crop-yield-interactive-dashboard-app/</guid>
      <description>
&lt;script src=&#34;https://victormandela.netlify.app/project/crop-yield-interactive-dashboard-app/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In this blog we look at the crop-yields in different countries from 1961 to 2018. Crop Yields is in tonnes per hectare&lt;/p&gt;
&lt;p&gt;The crops include bananas, barley, beans, cassava, cocoa beans, maize, peas, potatoes, rice, soya beans and wheat.&lt;/p&gt;
&lt;p&gt;We first begin by loading the packages and then setting the theme.&lt;/p&gt;
&lt;div id=&#34;section-data-cleaning-and-exploration&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data cleaning and exploration&lt;/h2&gt;
&lt;p&gt;We find out what the top 9 crops in the data sets.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Data cleaning and processing
yields_tidy &amp;lt;- readRDS(&amp;quot;yields_tidy.rds&amp;quot;)
top_nine &amp;lt;- yields_tidy %&amp;gt;%
  count(crop, sort = TRUE) %&amp;gt;%
  head(9) 

top_crops &amp;lt;- top_nine%&amp;gt;%
  pull(crop)

top_nine %&amp;gt;% knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have a look at the crop yield of Kenya and Tanzania. We can see that Cassava, Beans and Potatoes are the most produced crops.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yields_tidy %&amp;gt;% 
  filter(code %in% c(&amp;quot;TZA&amp;quot;, &amp;quot;KEN&amp;quot;)) %&amp;gt;%
    mutate(crop = fct_reorder(crop, -yield)) %&amp;gt;%
    mutate(entity = fct_reorder(entity, -yield)) %&amp;gt;%
    ggplot(aes(year, yield, color = entity)) +
    geom_line() +
    expand_limits(y = 0) +
    facet_wrap(~ crop, scales = &amp;quot;fixed&amp;quot;) +
    labs(x = &amp;quot;Year&amp;quot;,
         y = &amp;quot;Yield (tonnes per hectare)&amp;quot;,
         title = &amp;quot;Crop yields over time&amp;quot;,
         color = &amp;quot;Country&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;plot_yields &amp;lt;- function(tbl, facet_scales = &amp;quot;fixed&amp;quot;) {
  g &amp;lt;- tbl %&amp;gt;%
    mutate(crop = fct_reorder(crop, -yield)) %&amp;gt;%
    mutate(entity = fct_reorder(entity, -yield)) %&amp;gt;%
    ggplot(aes(year, yield, color = entity)) +
    geom_line() +
    expand_limits(y = 0) +
    facet_wrap(~ crop, scales = facet_scales) +
    labs(x = &amp;quot;Year&amp;quot;,
         y = &amp;quot;Yield (tonnes per hectare)&amp;quot;,
         title = &amp;quot;Crop yields over time&amp;quot;,
         color = &amp;quot;Country&amp;quot;)
  
  ggplotly(g)
}
# yields_tidy %&amp;gt;%
#   filter(code %in% c(&amp;quot;RWA&amp;quot;, &amp;quot;SEN&amp;quot;)) %&amp;gt;%
#   plot_yields()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is an example of the result with one of my Shiny app (&lt;a href=&#34;https://josabusmart.shinyapps.io/World_crops/&#34;&gt;link&lt;/a&gt; to the app):&lt;/p&gt;
&lt;iframe height=&#34;800&#34; width=&#34;100%&#34; frameborder=&#34;no&#34; src=&#34;https://josabusmart.shinyapps.io/World_crops/&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;The code to the dashboard is shown below.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
ui &amp;lt;- fluidPage(
  
  titlePanel(&amp;quot;Crop Yields of all Countries/Continents/Region from 1961 to 2018: Victor Mandela&amp;quot;),
  
  sidebarLayout(
    sidebarPanel(
      selectInput(&amp;quot;entity&amp;quot;,
              label = &amp;quot;Country Name:&amp;quot;,
              choices = unique(yields_tidy$entity),
              selected = c(&amp;quot;Kenya&amp;quot;, &amp;quot;Tanzania&amp;quot;),
              selectize = TRUE,
              multiple = TRUE),
      selectInput(&amp;quot;crop&amp;quot;,
              label = &amp;quot;Types of Crops:&amp;quot;,
              choices = unique(yields_tidy$crop),
              selected = top_crops,
              selectize = TRUE,
              multiple = TRUE),
      radioButtons(&amp;quot;facet_scales&amp;quot;,
               label = &amp;quot;&amp;quot;,
               choices = c(&amp;quot;Free y-axis&amp;quot; = &amp;quot;free_y&amp;quot;,
                           &amp;quot;Shared y-axis&amp;quot; = &amp;quot;fixed&amp;quot;))
      ),
      mainPanel(
  plotlyOutput(&amp;quot;crop_plot&amp;quot;),
  dataTableOutput(&amp;quot;tabled&amp;quot;)
      )
    )
  )


server &amp;lt;- function(input, output){
  plot_yields &amp;lt;- function(tbl, facet_scales = &amp;quot;fixed&amp;quot;) {
  g &amp;lt;- tbl %&amp;gt;%
    mutate(crop = fct_reorder(crop, -yield)) %&amp;gt;%
    mutate(entity = fct_reorder(entity, -yield)) %&amp;gt;%
    ggplot(aes(year, yield, color = entity)) +
    geom_line() +
    expand_limits(y = 0) +
    facet_wrap(~ crop, scales = facet_scales) +
    labs(x = &amp;quot;Year&amp;quot;,
         y = &amp;quot;Yield (tonnes per hectare)&amp;quot;,
         title = &amp;quot;Crop yields over time&amp;quot;,
         color = &amp;quot;Country&amp;quot;,
         caption = &amp;quot;Data source: TidyTuesday&amp;quot;)
  
  ggplotly(g)
  }
  
output$crop_plot &amp;lt;- renderPlotly({
  yields_tidy %&amp;gt;%
    filter(entity %in% input$entity,
           crop %in% input$crop) %&amp;gt;%
    plot_yields(facet_scales = input$facet_scales)
})

output$tabled &amp;lt;- renderDataTable(yields_tidy,
                                 options = list(
          pageLength = 5
        )
      )

}
shinyApp(ui = ui, server = server)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Inferential Statistics Dashboard</title>
      <link>https://victormandela.netlify.app/project/inferential-statistics-dashboard/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://victormandela.netlify.app/project/inferential-statistics-dashboard/</guid>
      <description>
&lt;script src=&#34;https://victormandela.netlify.app/project/inferential-statistics-dashboard/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;Stats.jpg&#34; style=&#34;width:50.0%&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Inferential Statistics&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If you have developed and deployed a Shiny app and would like to embed it in blogdown, follow these steps:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;create a new post as usual&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;runtime: shiny&lt;/code&gt; (and &lt;code&gt;output: html_document&lt;/code&gt; if it is not already included) in the YAML metadata&lt;/li&gt;
&lt;li&gt;insert the following HTML code in the body of the post:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;iframe height=&amp;quot;800&amp;quot; width=&amp;quot;100%&amp;quot; frameborder=&amp;quot;no&amp;quot; src=&amp;quot;https://yourname.shinyapps.io/InferentialStatistics/&amp;quot;&amp;gt; &amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should change the URL with the URL of your deployed Shiny app (after &lt;code&gt;src=&lt;/code&gt;, do not forget that the URL should start with &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; and should be surrounded by &lt;code&gt;&#34;&lt;/code&gt;). Moreover, you can modify the height, the width and include or not a frame border with the corresponding tags.&lt;/p&gt;
&lt;p&gt;Here is an example of the result with one of my Shiny app (&lt;a href=&#34;https://josabusmart.shinyapps.io/InferentialStatistics/&#34;&gt;link&lt;/a&gt; to the app):&lt;/p&gt;
&lt;iframe height=&#34;800&#34; width=&#34;100%&#34; frameborder=&#34;no&#34; src=&#34;https://josabusmart.shinyapps.io/InferentialStatistics/&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note that the app may not work if it has hit the monthly usage limit. Try again later if that is the case.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you encounter an issue, try loading the following packages in the body of your new post: &lt;code&gt;shiny&lt;/code&gt;, &lt;code&gt;widgetframe&lt;/code&gt; (you can load a package with the command &lt;code&gt;library(widgetframe)&lt;/code&gt;). If one of the package is not installed yet, you can do it with the command &lt;code&gt;install.packages(&#34;widgetframe&#34;)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I hope this article helped you to embed a Shiny app in your website.&lt;/p&gt;
&lt;p&gt;As always, if you have a question or a suggestion related to the topic covered in this article, please add it as a comment so other readers can benefit from the discussion.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
